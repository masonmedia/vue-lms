{"remainingRequest":"/Users/andrewmason/Projects/TAM_projects/vue_lms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrewmason/Projects/TAM_projects/vue_lms/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css&","dependencies":[{"path":"/Users/andrewmason/Projects/TAM_projects/vue_lms/src/components/HelloWorld.vue","mtime":1627485619766},{"path":"/Users/andrewmason/Projects/TAM_projects/vue_lms/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewmason/Projects/TAM_projects/vue_lms/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/andrewmason/Projects/TAM_projects/vue_lms/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/andrewmason/Projects/TAM_projects/vue_lms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewmason/Projects/TAM_projects/vue_lms/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmgzIHsKICAgIG1hcmdpbjogNDBweCAwIDA7Cn0KdWwgewogICAgbGlzdC1zdHlsZS10eXBlOiBub25lOwogICAgcGFkZGluZzogMDsKfQpsaSB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBtYXJnaW46IDAgMTBweDsKfQphIHsKICAgIGNvbG9yOiAjNDJiOTgzOwp9Cg=="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"hello\">\n        <b-container>\n            <b-row>\n                <b-col>\n                    <h1>{{ msg }}</h1>\n                </b-col>\n            </b-row>\n            <b-row>\n                <b-col md=\"4\">\n                    <b-button block class=\"mb-2\" @click=\"lmsInitialize()\">Initialize</b-button>\n                    <b-button block class=\"mb-2\" @click=\"readSuspendData()\">Read SuspendData</b-button>\n                    <b-button block class=\"mb-2\" @click=\"updateSuspendData()\">Write SuspendData</b-button>\n                    <b-button block class=\"mb-2\" @click=\"setCompletion()\">setCompletion</b-button>\n                    <b-button block class=\"mb-2\" @click=\"setSuccessStatus()\">setSuccessStatus</b-button>\n                    <b-button block class=\"mb-2\" @click=\"lmsSave()\">Save</b-button>\n                    <b-button block class=\"mb-2\" @click=\"lmsQuit()\">Quit</b-button>\n                </b-col>\n                <b-col md=\"8\">\n                    <b-form-textarea id=\"textarea\" v-model=\"text\" rows=\"10\"></b-form-textarea>\n                </b-col>\n            </b-row>\n        </b-container>\n    </div>\n</template>\n\n<script>\nimport { SCORM } from \"pipwerks-scorm-api-wrapper\";\n\nexport default {\n    name: \"HelloWorld\",\n    props: {\n        msg: String,\n    },\n    data() {\n        return {\n            text: \"\",\n        };\n    },\n    methods: {\n        lmsInitialize() {\n            var status = SCORM.init();\n            if (status) {\n                // otherwise it's gonna set completion=completed and Success=passed if you just open and close the course\n                this.lmsSet({\n                    key: \"cmi.exit\",\n                    value: \"suspend\",\n                });\n                this.lmsSave();\n            }\n            console.log(\"### lmsInitialize: \", status);\n        },\n\n        lmsSet(payload) {\n            var key = payload.key;\n            var value = payload.value;\n\n            var status = SCORM.set(key, value);\n            console.log(\"### lmsSet: \", payload, status);\n        },\n\n        lmsGet (payload) {\n            var returnValue = SCORM.get(payload);\n\n            console.log(\"### lmsGet: \", payload, returnValue);\n            return returnValue;\n        },\n\n        lmsSave () {\n            var returnValue = SCORM.save();\n\n            console.log(\"### lmsSave: \", returnValue);\n        },\n\n        lmsQuit () {\n            var status = SCORM.quit();\n            console.log(\"### lmsQuit: \", status);\n        },\n\n        updateSuspendData() {\n            this.lmsSet({\n                key: \"cmi.suspend_data\",\n                value: this.text,\n            });\n        },\n\n        readSuspendData() {\n            this.text = this.lmsGet(\"cmi.suspend_data\");\n        },\n\n        setCompletion() {\n             this.lmsSet({\n                key: \"cmi.completion_status\",\n                value: \"completed\",\n            });\n        },\n\n        setSuccessStatus() {\n             this.lmsSet({\n                key: \"cmi.success_status\",\n                value: \"passed\",\n            });\n        }\n    },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n    margin: 40px 0 0;\n}\nul {\n    list-style-type: none;\n    padding: 0;\n}\nli {\n    display: inline-block;\n    margin: 0 10px;\n}\na {\n    color: #42b983;\n}\n</style>\n"]}]}